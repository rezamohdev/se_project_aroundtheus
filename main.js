!function(){"use strict";class e{constructor(e,t){let{cardData:r,myId:s,handleImageClick:i,handleDeleteClick:n,handleLikeClick:o}=e;this._cardData=r,this._myId=s,this._name=r.name,this._link=r.link,this._cardSelector=t,this._handleImageClick=i,this._handleDeleteClick=n,this._handleLikeClick=o,this._likes=r.likes,this._owner=r.owner,this._id=r._id}_setEventListeners(){this._likeButton=this._elment.querySelector(".card__like-button"),this._deleteButton=this._elment.querySelector(".card__delete-button"),this._likesAmount=this._elment.querySelector(".card__like-amount"),this._likeButton.addEventListener("click",(()=>this._handleLikeClick())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteClick())),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._cardData)}))}getId(){return this._id}isLiked(){return this._likes.some((e=>e._id===this._myId))}setLikes(e){this._likes=e,this._handleLikeIcon(),this.updateLikes()}updateLikes(){this._likesAmount.textContent=this._likes.length}_handleLikeIcon(){this.isLiked()?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_checkCardOwner(){this._myId!==this._owner._id&&this._deleteButton.classList.add("card__delete-button-hidden")}handleDeleteIcon(){this._elment.remove(),this._elment=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._elment=this._getTemplate(),this._cardImage=this._elment.querySelector(".card__image"),this._cardTitle=this._elment.querySelector(".card__title"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._setEventListeners(),this.updateLikes(),this._handleLikeIcon(),this._checkCardOwner(),this._elment}}class t{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}}class r extends t{constructor(e){let{popupSelector:t,handleFormSubmit:r,loadingText:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._handleFormSubmit=r,this._submitButton=this._popupForm.querySelector(".modal__button[type='submit']"),this._submitButtonText=this._submitButton.textContent,this._loadingText=s}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}close(){this._popupForm.reset(),super.close()}_getInputValues(){return this._newData={},this._inputList.forEach((e=>{this._newData[e.name]=e.value})),this._newData}setSubmitAction(e){this._handleFormSubmit=e}renderLoading(e){this._submitButton.textContent=e?this._loadingText:this._submitButtonText}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}class s{constructor(e,t){let{data:r,renderer:s}=e;this._renderedItems=r,this._renderer=s,this._container=document.querySelector(t)}addItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}renderItems(){this._renderedItems.forEach((e=>{this._renderer(e)}))}}const i=document.querySelector("#profile-edit-button"),n=document.querySelector("#profile-add-button"),o="#profile-modal",l="#card-modal",a="#image-modal",d="#profile-title",c="#profile-description",u=".gallery__cards",h="#change-profile-modal",_=document.querySelector(o),m=document.querySelector(l),p=document.querySelector(a),S=document.querySelector(h),E=(document.querySelector(".modal__image"),document.querySelector(".modal__caption"),document.querySelector("#modal-close"),m.querySelector("#card-modal-close"),p.querySelector("#image-modal-close"),document.querySelector(d),document.querySelector(c),m.querySelector("#modal-title-input"),m.querySelector("#modal-url-input"),document.querySelector("#modal-name")),v=document.querySelector("#modal-description"),y=(document.querySelector("#modal-submit-button"),document.querySelector("#card-modal-submit-button"),document.querySelector(".profile__avatar-edit-button"));document.querySelector("#chnage-profile-modal-submit-button"),document.querySelector(u),document.querySelector("#card-template").content.firstElementChild,_.querySelector(".modal__form"),m.querySelector(".modal__form"),S.querySelector(".modal__form");const k=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}addCard(e){let{title:t,url:r}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}removeCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}getUserInfo(){return this._request(`${this._baseUrl}//users/me`,{headers:this._headers})}userEditProfile(e){let{title:t,description:r}=e;return this._request(`${this._baseUrl}//users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}likeCard(e){return this._request(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers})}unLikeCard(e){return this._request(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers})}updateUserProfile(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"9eeac52f-491b-4cc6-8ef1-69498b3521ca","Content-Type":"application/json"}}),L={};var b;b={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__button_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(b.formSelector)).forEach((e=>{const t=new class{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){this._hasInvalidInput()?this._disableButton():(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this.toggleButtonState()}_disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}_checkInputValidty(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}_setEventListeners(){this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidty(e),this.toggleButtonState(this._inputList)}))}))}enableValidation(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}(b,e),r=e.getAttribute("name");L[r]=t,t.enableValidation()}));const f=new class{constructor(e){let{userNameSelector:t,userDescriptionSelector:r,avatarSelector:s}=e;this._userNameElement=document.querySelector(t),this._userDescriptionElement=document.querySelector(r),this._profileAvatarElement=document.querySelector(s)}getUserInfo(){return{userName:this._userNameElement.textContent,userDescription:this._userDescriptionElement.textContent}}setUserInfo(e){let{title:t,description:r}=e;this._userNameElement.textContent=t,this._userDescriptionElement.textContent=r,this.setAvatartInfo(this._avatar)}setAvatartInfo(e){this._profileAvatarElement.src=e}}({userNameSelector:d,userDescriptionSelector:c,avatarSelector:".profile__avatar"});let g,C;k.getAppInfo().then((e=>{let[t,r]=e;C=t._id,f.setUserInfo({title:t.name,description:t.about}),f.setAvatartInfo(t.avatar),g=new s({data:r,renderer:x},u),g.renderItems()})).catch(console.error);const q=new class extends t{constructor(e){let{popupSelector:t}=e;super({popupSelector:t})}open(e){let{link:t,name:r}=e;this._popupElement.querySelector(".modal__caption").textContent=r;const s=this._popupElement.querySelector(".modal__image");s.src=t,s.alt=r,super.open()}}({popupSelector:a}),I=new r({popupSelector:h,handleFormSubmit:e=>{I.renderLoading(!0),k.updateUserProfile({avatar:e.url}).then((e=>{f.setAvatartInfo(e.avatar),I.close()})).catch(console.error).finally((()=>{I.renderLoading(!1)}))},loadingText:"Saving..."}),B=new r({popupSelector:o,handleFormSubmit:e=>{B.renderLoading(!0),k.userEditProfile(e).then((e=>{f.setUserInfo({title:e.name,description:e.about}),f.setAvatartInfo(e.avatar),B.close()})).catch(console.error).finally((()=>{B.renderLoading(!1)}))},loadingText:"Saving..."}),D=new r({popupSelector:"#card-delete-modal",loadingText:"Deleting..."}),w=new r({popupSelector:l,handleFormSubmit:e=>{w.renderLoading(!0),k.addCard(e).then((e=>{x(e),w.close()})).catch(console.error).finally((()=>{w.renderLoading(!1)}))},loadingText:"Saving..."});function x(t){const r=function(t){const r=new e({cardData:t,myId:C,handleImageClick:e=>{q.open(e)},handleDeleteClick:()=>{D.open(),D.setSubmitAction((()=>{D.renderLoading(!0);const e=r.getId();k.removeCard(e).then((()=>{r.handleDeleteIcon(),D.close()})).catch(console.error).finally((()=>{D.renderLoading(!1)}))}))},handleLikeClick:()=>{const e=r.getId();r.isLiked()?k.unLikeCard(e).then((e=>{r.setLikes(e.likes)})).catch(console.error):k.likeCard(e).then((e=>{r.setLikes(e.likes)})).catch(console.error)}},"#card-template");return r.getView()}(t);g.prependItem(r)}B.setEventListeners(),w.setEventListeners(),q.setEventListeners(),D.setEventListeners(),I.setEventListeners(),i.addEventListener("click",(()=>{B.open();const e=f.getUserInfo();E.value=e.userName,v.value=e.userDescription,L.editProfileModalForm.resetValidation()})),n.addEventListener("click",(()=>{L.cardModalForm.resetValidation(),w.open()})),y.addEventListener("click",(()=>{L.changeAvatarModalForm.resetValidation(),I.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9zZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9BUEkuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgY2FyZERhdGEsIG15SWQsIGhhbmRsZUltYWdlQ2xpY2ssIGhhbmRsZURlbGV0ZUNsaWNrLCBoYW5kbGVMaWtlQ2xpY2sgfSwgY2FyZFNlbGVjdG9yKSB7XHJcbiAgICAgICAgdGhpcy5fY2FyZERhdGEgPSBjYXJkRGF0YTtcclxuICAgICAgICB0aGlzLl9teUlkID0gbXlJZDtcclxuICAgICAgICB0aGlzLl9uYW1lID0gY2FyZERhdGEubmFtZTtcclxuICAgICAgICB0aGlzLl9saW5rID0gY2FyZERhdGEubGluaztcclxuICAgICAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayA9IGhhbmRsZUltYWdlQ2xpY2s7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sgPSBoYW5kbGVEZWxldGVDbGljaztcclxuICAgICAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XHJcbiAgICAgICAgdGhpcy5fbGlrZXMgPSBjYXJkRGF0YS5saWtlcztcclxuICAgICAgICB0aGlzLl9vd25lciA9IGNhcmREYXRhLm93bmVyO1xyXG4gICAgICAgIHRoaXMuX2lkID0gY2FyZERhdGEuX2lkO1xyXG4gICAgfVxyXG5cclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19saWtlLWJ1dHRvbicpO1xyXG4gICAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbiA9IHRoaXMuX2VsbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fZGVsZXRlLWJ1dHRvbicpO1xyXG4gICAgICAgIHRoaXMuX2xpa2VzQW1vdW50ID0gdGhpcy5fZWxtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19saWtlLWFtb3VudCcpO1xyXG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9oYW5kbGVMaWtlQ2xpY2soKSk7XHJcbiAgICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2soKSk7XHJcblxyXG4gICAgICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4geyB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHRoaXMuX2NhcmREYXRhKSB9KTtcclxuXHJcbiAgICB9XHJcbiAgICBnZXRJZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faWQ7XHJcbiAgICB9XHJcbiAgICBpc0xpa2VkKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9saWtlcy5zb21lKChsaWtlKSA9PiBsaWtlLl9pZCA9PT0gdGhpcy5fbXlJZCk7XHJcbiAgICB9XHJcbiAgICBzZXRMaWtlcyhsaWtlcykge1xyXG4gICAgICAgIHRoaXMuX2xpa2VzID0gbGlrZXM7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlTGlrZUljb24oKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZUxpa2VzKCk7XHJcbiAgICB9XHJcbiAgICB1cGRhdGVMaWtlcygpIHtcclxuICAgICAgICB0aGlzLl9saWtlc0Ftb3VudC50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcclxuICAgIH1cclxuXHJcblxyXG4gICAgX2hhbmRsZUxpa2VJY29uKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmlzTGlrZWQoKSkge1xyXG4gICAgICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2NhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgX2NoZWNrQ2FyZE93bmVyKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9teUlkICE9PSB0aGlzLl9vd25lci5faWQpIHtcclxuICAgICAgICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2NhcmRfX2RlbGV0ZS1idXR0b24taGlkZGVuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBoYW5kbGVEZWxldGVJY29uKCkge1xyXG4gICAgICAgIHRoaXMuX2VsbWVudC5yZW1vdmUoKTtcclxuICAgICAgICB0aGlzLl9lbG1lbnQgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpLmNvbnRlbnQucXVlcnlTZWxlY3RvcignLmNhcmQnKS5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VmlldygpIHtcclxuICAgICAgICB0aGlzLl9lbG1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2VsbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9faW1hZ2UnKTtcclxuICAgICAgICB0aGlzLl9jYXJkVGl0bGUgPSB0aGlzLl9lbG1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX3RpdGxlJyk7XHJcblxyXG4gICAgICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgICAgIHRoaXMuX2NhcmRUaXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICAgICAgdGhpcy5fY2FyZEltYWdlLmFsdCA9IHRoaXMuX25hbWU7XHJcblxyXG4gICAgICAgIC8vIHRoZW4gc2V0IGV2ZW50IGxpc3RuZXJzXHJcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZUxpa2VzKCk7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlTGlrZUljb24oKTtcclxuICAgICAgICB0aGlzLl9jaGVja0NhcmRPd25lcigpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9lbG1lbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciB9KSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XHJcbiAgICB9XHJcbiAgICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XHJcbiAgICAgICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIGNvbnN0IG1vZGFsQ2xvc2VCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsX19jbG9zZScpO1xyXG4gICAgICAgIG1vZGFsQ2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmNsb3NlKCkpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSB0aGlzLl9wb3B1cEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH1cclxuICAgIG9wZW4oKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ21vZGFsX29wZW5lZCcpO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICB9XHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWxfb3BlbmVkJyk7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cCc7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQsIGxvYWRpbmdUZXh0IH0pIHtcclxuICAgICAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fZm9ybScpO1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubW9kYWxfX2lucHV0Jyk7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvblt0eXBlPSdzdWJtaXQnXVwiKTtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b25UZXh0ID0gdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xyXG4gICAgICAgIHRoaXMuX2xvYWRpbmdUZXh0ID0gbG9hZGluZ1RleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0SW5wdXRWYWx1ZXMoZGF0YSkge1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICAgICAgICAvLyBoZXJlIHlvdSBpbnNlcnQgdGhlIGB2YWx1ZWAgYnkgdGhlIGBuYW1lYCBvZiB0aGUgaW5wdXRcclxuICAgICAgICAgICAgaW5wdXQudmFsdWUgPSBkYXRhW2lucHV0Lm5hbWVdO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICAgICAgdGhpcy5fbmV3RGF0YSA9IHt9O1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fbmV3RGF0YVtpbnB1dEVsZW1lbnQubmFtZV0gPSBpbnB1dEVsZW1lbnQudmFsdWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX25ld0RhdGE7XHJcbiAgICB9XHJcbiAgICBzZXRTdWJtaXRBY3Rpb24oYWN0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGFjdGlvbjtcclxuICAgIH1cclxuICAgIHJlbmRlckxvYWRpbmcoaXNMb2FkaW5nKSB7XHJcbiAgICAgICAgaWYgKGlzTG9hZGluZykge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9sb2FkaW5nVGV4dDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9zdWJtaXRCdXR0b25UZXh0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gICAgY29uc3RydWN0b3IoeyBkYXRhLCByZW5kZXJlciB9LCBjYXJkU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zID0gZGF0YTtcclxuICAgICAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY2FyZFNlbGVjdG9yKTtcclxuICAgIH1cclxuICAgIGFkZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmQoZWxlbWVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJlcGVuZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gICAgfVxyXG4gICAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICAgICAgdGhpcy5fcmVuZGVyZWRJdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG5cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSIsIi8vIEJ1dHRvbnNcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb2ZpbGUtZWRpdC1idXR0b24nKTtcclxuZXhwb3J0IGNvbnN0IGNhcmRBZGRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvZmlsZS1hZGQtYnV0dG9uJyk7XHJcblxyXG4vLyBvdGhlcnNcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVNb2RhbFNlbGVjdG9yID0gXCIjcHJvZmlsZS1tb2RhbFwiO1xyXG5leHBvcnQgY29uc3QgY2FyZE1vZGFsU2VsZWN0b3IgPSAnI2NhcmQtbW9kYWwnO1xyXG5leHBvcnQgY29uc3QgaW1hZ2VNb2RhbFNlbGVjdG9yID0gJyNpbWFnZS1tb2RhbCc7XHJcbmV4cG9ydCBjb25zdCB1c2VyTmFtZVNlbGVjdG9yID0gJyNwcm9maWxlLXRpdGxlJztcclxuZXhwb3J0IGNvbnN0IHVzZXJEZXNjcmlwdGlvblNlbGVjdG9yID0gJyNwcm9maWxlLWRlc2NyaXB0aW9uJztcclxuZXhwb3J0IGNvbnN0IG1vZGFsTmFtZUlucHV0U2VsZWN0b3IgPSAnI21vZGFsLW5hbWUnO1xyXG5leHBvcnQgY29uc3QgYXZhdGFyU2VsZWN0b3IgPSAnLnByb2ZpbGVfX2F2YXRhcic7XHJcbmV4cG9ydCBjb25zdCBtb2RhbERlc2NyaXB0aW9uSW5wdXRTZWxlY3RvciA9ICcjbW9kYWwtZGVzY3JpcHRpb24nO1xyXG5leHBvcnQgY29uc3QgY2FyZExpc3RTZWxlY3RvciA9ICcuZ2FsbGVyeV9fY2FyZHMnO1xyXG5leHBvcnQgY29uc3QgY2FyZERlbGV0ZU1vZGFsU2VsZWN0b3IgPSAnI2NhcmQtZGVsZXRlLW1vZGFsJztcclxuZXhwb3J0IGNvbnN0IG1vZGFsQ2hhbmdlUHJvZmlsZVNlbGVjdG9yID0gJyNjaGFuZ2UtcHJvZmlsZS1tb2RhbCc7XHJcblxyXG4vLyBNb2RhbHNcclxuY29uc3QgcHJvZmlsZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlTW9kYWxTZWxlY3Rvcik7XHJcbmNvbnN0IGNhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY2FyZE1vZGFsU2VsZWN0b3IpO1xyXG5jb25zdCBpbWFnZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihpbWFnZU1vZGFsU2VsZWN0b3IpO1xyXG5jb25zdCBjaGFuZ2VQcm9maWxlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG1vZGFsQ2hhbmdlUHJvZmlsZVNlbGVjdG9yKTtcclxuY29uc3QgbW9kYWxJbWFnZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2ltYWdlJyk7XHJcbmNvbnN0IG1vZGFsQ2FwdGlvbkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2NhcHRpb24nKTtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgY2xvc2VNb2RhbEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtb2RhbC1jbG9zZScpO1xyXG5leHBvcnQgY29uc3QgY2xvc2VDYXJkTW9kYWxCdXR0b24gPSBjYXJkTW9kYWwucXVlcnlTZWxlY3RvcignI2NhcmQtbW9kYWwtY2xvc2UnKTtcclxuZXhwb3J0IGNvbnN0IGNsb3NlSW1hZ2VNb2RhbEJ1dHRvbiA9IGltYWdlTW9kYWwucXVlcnlTZWxlY3RvcignI2ltYWdlLW1vZGFsLWNsb3NlJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJOYW1lU2VsZWN0b3IpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyRGVzY3JpcHRpb25TZWxlY3Rvcik7XHJcbmV4cG9ydCBjb25zdCBuZXdDYXJkVGl0bGUgPSBjYXJkTW9kYWwucXVlcnlTZWxlY3RvcignI21vZGFsLXRpdGxlLWlucHV0Jyk7XHJcbmV4cG9ydCBjb25zdCBuZXdDYXJkVXJsID0gY2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoJyNtb2RhbC11cmwtaW5wdXQnKTtcclxuZXhwb3J0IGNvbnN0IG1vZGFsTmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihtb2RhbE5hbWVJbnB1dFNlbGVjdG9yKTtcclxuZXhwb3J0IGNvbnN0IG1vZGFsRGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobW9kYWxEZXNjcmlwdGlvbklucHV0U2VsZWN0b3IpO1xyXG5leHBvcnQgY29uc3QgbW9kYWxTdWJtaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbW9kYWwtc3VibWl0LWJ1dHRvbicpO1xyXG5leHBvcnQgY29uc3QgY2FyZE1vZGFsU3VibWl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NhcmQtbW9kYWwtc3VibWl0LWJ1dHRvbicpO1xyXG5leHBvcnQgY29uc3QgZWRpdEJ1dHRvbkF2YXRhcnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyLWVkaXQtYnV0dG9uJyk7XHJcbmV4cG9ydCBjb25zdCBjaGFuZ2VQcm9maWxlTW9kYWxTdWJtaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2huYWdlLXByb2ZpbGUtbW9kYWwtc3VibWl0LWJ1dHRvbicpO1xyXG5leHBvcnQgY29uc3QgY2FyZExpc3RFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjYXJkTGlzdFNlbGVjdG9yKTtcclxuZXhwb3J0IGNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYXJkLXRlbXBsYXRlJykuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZDtcclxuLy8gZm9ybXNcclxuZXhwb3J0IGNvbnN0IG1vZGFsUHJvZmlsZUZvcm0gPSBwcm9maWxlTW9kYWwucXVlcnlTZWxlY3RvcignLm1vZGFsX19mb3JtJyk7XHJcbmV4cG9ydCBjb25zdCBtb2RhbENhcmRGb3JtID0gY2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fZm9ybScpO1xyXG5leHBvcnQgY29uc3QgbW9kYWxDaGFuZ2VQcm9maWxlRm9ybSA9IGNoYW5nZVByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2Zvcm0nKTtcclxuXHJcbmV4cG9ydCBjb25zdCB2YWxpZGF0aW9uU2V0dGluZ3MgPSB7XHJcbiAgICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXHJcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcclxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fYnV0dG9uXCIsXHJcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcclxuICAgIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9fYnV0dG9uX3R5cGVfZXJyb3JcIixcclxuICAgIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIlxyXG59O1xyXG4iLCIvLyBJbXBvcnRzXHJcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvc2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQge1xyXG4gICAgdXNlck5hbWVTZWxlY3RvcixcclxuICAgIHVzZXJEZXNjcmlwdGlvblNlbGVjdG9yLFxyXG4gICAgaW1hZ2VNb2RhbFNlbGVjdG9yLFxyXG4gICAgcHJvZmlsZU1vZGFsU2VsZWN0b3IsXHJcbiAgICBjYXJkTW9kYWxTZWxlY3RvcixcclxuICAgIGNhcmRMaXN0U2VsZWN0b3IsXHJcbiAgICBtb2RhbE5hbWVJbnB1dCxcclxuICAgIG1vZGFsRGVzY3JpcHRpb25JbnB1dCxcclxuICAgIGNhcmRMaXN0RWxlbWVudCxcclxuICAgIG1vZGFsUHJvZmlsZUZvcm0sXHJcbiAgICBtb2RhbENhcmRGb3JtLFxyXG4gICAgbW9kYWxDaGFuZ2VQcm9maWxlRm9ybSxcclxuICAgIHZhbGlkYXRpb25TZXR0aW5ncyxcclxuICAgIHByb2ZpbGVFZGl0QnV0dG9uLFxyXG4gICAgY2FyZEFkZEJ1dHRvbixcclxuICAgIGNoYW5nZVByb2ZpbGVNb2RhbFN1Ym1pdEJ1dHRvbixcclxuICAgIGNhcmREZWxldGVNb2RhbFNlbGVjdG9yLFxyXG4gICAgbW9kYWxDaGFuZ2VQcm9maWxlLFxyXG4gICAgbW9kYWxDaGFuZ2VQcm9maWxlU2VsZWN0b3IsXHJcbiAgICBlZGl0QnV0dG9uQXZhdGFydCxcclxuICAgIGF2YXRhclNlbGVjdG9yLFxyXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IEFwaSBmcm9tIFwiLi4vdXRpbHMvQVBJLmpzXCJcclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTJcIixcclxuICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiBcIjllZWFjNTJmLTQ5MWItNGNjNi04ZWYxLTY5NDk4YjM1MjFjYVwiLFxyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcbiAgICB9XHJcbn0pO1xyXG5cclxuY29uc3QgZm9ybVZhbGlkYXRvcnMgPSB7fVxyXG5cclxuLy8gZW5hYmxlIHZhbGlkYXRpb25cclxuY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9ICh2YWxpZGF0aW9uU2V0dGluZ3MpID0+IHtcclxuICAgIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHZhbGlkYXRpb25TZXR0aW5ncy5mb3JtU2VsZWN0b3IpKVxyXG4gICAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcclxuICAgICAgICBjb25zdCB2YWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uU2V0dGluZ3MsIGZvcm1FbGVtZW50KVxyXG5cclxuICAgICAgICBjb25zdCBmb3JtTmFtZSA9IGZvcm1FbGVtZW50LmdldEF0dHJpYnV0ZSgnbmFtZScpXHJcblxyXG4gICAgICAgIGZvcm1WYWxpZGF0b3JzW2Zvcm1OYW1lXSA9IHZhbGlkYXRvcjtcclxuICAgICAgICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5lbmFibGVWYWxpZGF0aW9uKHZhbGlkYXRpb25TZXR0aW5ncyk7XHJcblxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7IHVzZXJOYW1lU2VsZWN0b3IsIHVzZXJEZXNjcmlwdGlvblNlbGVjdG9yLCBhdmF0YXJTZWxlY3RvciB9KTtcclxuXHJcbmxldCBzZWN0aW9uSW5zdGFuY2U7XHJcbmxldCB1c2VySWQ7XHJcbmFwaS5nZXRBcHBJbmZvKClcclxuICAgIC50aGVuKChbdXNlckRhdGEsIGNhcmREYXRhXSkgPT4ge1xyXG4gICAgICAgIC8vIHNldCBhbGwgdGhlIGRhdGFcclxuICAgICAgICB1c2VySWQgPSB1c2VyRGF0YS5faWQ7XHJcbiAgICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oe1xyXG4gICAgICAgICAgICB0aXRsZTogdXNlckRhdGEubmFtZSxcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IHVzZXJEYXRhLmFib3V0XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdXNlckluZm8uc2V0QXZhdGFydEluZm8odXNlckRhdGEuYXZhdGFyKTtcclxuICAgICAgICBzZWN0aW9uSW5zdGFuY2UgPSBuZXcgU2VjdGlvbih7XHJcbiAgICAgICAgICAgIGRhdGE6IGNhcmREYXRhLFxyXG4gICAgICAgICAgICByZW5kZXJlcjogcmVuZGVyQ2FyZFxyXG4gICAgICAgIH0sIGNhcmRMaXN0U2VsZWN0b3IpO1xyXG4gICAgICAgIHNlY3Rpb25JbnN0YW5jZS5yZW5kZXJJdGVtcygpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuXHJcbmNvbnN0IG1vZGFsV2l0aEltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlKHsgcG9wdXBTZWxlY3RvcjogaW1hZ2VNb2RhbFNlbGVjdG9yIH0pO1xyXG5cclxuY29uc3QgY2hhbmdlUHJvZmlsZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xyXG4gICAgcG9wdXBTZWxlY3RvcjogbW9kYWxDaGFuZ2VQcm9maWxlU2VsZWN0b3IsXHJcbiAgICBoYW5kbGVGb3JtU3VibWl0OiAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNoYW5nZVByb2ZpbGVQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xyXG4gICAgICAgIGFwaS51cGRhdGVVc2VyUHJvZmlsZSh7IGF2YXRhcjogZGF0YS51cmwgfSlcclxuICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7XHJcbiAgICAgICAgICAgICAgICB1c2VySW5mby5zZXRBdmF0YXJ0SW5mbyhkYXRhLmF2YXRhcik7XHJcbiAgICAgICAgICAgICAgICBjaGFuZ2VQcm9maWxlUG9wdXAuY2xvc2UoKTtcclxuICAgICAgICAgICAgfSkuY2F0Y2goY29uc29sZS5lcnJvcikuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjaGFuZ2VQcm9maWxlUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIGxvYWRpbmdUZXh0OiBcIlNhdmluZy4uLlwiXHJcbn0pO1xyXG5cclxuY29uc3QgbW9kYWxXaXRoRm9ybVVzZXIgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgICBwb3B1cFNlbGVjdG9yOiBwcm9maWxlTW9kYWxTZWxlY3RvcixcclxuICAgIGhhbmRsZUZvcm1TdWJtaXQ6IChkYXRhKSA9PiB7XHJcbiAgICAgICAgbW9kYWxXaXRoRm9ybVVzZXIucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICAgICAgICBhcGkudXNlckVkaXRQcm9maWxlKGRhdGEpXHJcbiAgICAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7XHJcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGRhdGEubmFtZSxcclxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZGF0YS5hYm91dFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB1c2VySW5mby5zZXRBdmF0YXJ0SW5mbyhkYXRhLmF2YXRhcik7XHJcbiAgICAgICAgICAgICAgICBtb2RhbFdpdGhGb3JtVXNlci5jbG9zZSgpO1xyXG4gICAgICAgICAgICB9KS5jYXRjaChjb25zb2xlLmVycm9yKS5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIG1vZGFsV2l0aEZvcm1Vc2VyLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBsb2FkaW5nVGV4dDogXCJTYXZpbmcuLi5cIlxyXG59KTtcclxuXHJcbmNvbnN0IGNvbmZpcm1Nb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcclxuICAgIHBvcHVwU2VsZWN0b3I6IGNhcmREZWxldGVNb2RhbFNlbGVjdG9yLFxyXG4gICAgbG9hZGluZ1RleHQ6IFwiRGVsZXRpbmcuLi5cIlxyXG59KTtcclxuXHJcbmNvbnN0IG1vZGFsV2l0aEZvcm1JbWFnZSA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcclxuICAgIHBvcHVwU2VsZWN0b3I6IGNhcmRNb2RhbFNlbGVjdG9yLFxyXG4gICAgaGFuZGxlRm9ybVN1Ym1pdDogKGRhdGEpID0+IHtcclxuICAgICAgICBtb2RhbFdpdGhGb3JtSW1hZ2UucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICAgICAgICBhcGkuYWRkQ2FyZChkYXRhKVxyXG4gICAgICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmVuZGVyQ2FyZChkYXRhKTtcclxuICAgICAgICAgICAgICAgIG1vZGFsV2l0aEZvcm1JbWFnZS5jbG9zZSgpO1xyXG4gICAgICAgICAgICB9KS5jYXRjaChjb25zb2xlLmVycm9yKS5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIG1vZGFsV2l0aEZvcm1JbWFnZS5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgbG9hZGluZ1RleHQ6IFwiU2F2aW5nLi4uXCJcclxufSk7XHJcblxyXG5mdW5jdGlvbiByZW5kZXJDYXJkKGNhcmREYXRhKSB7XHJcbiAgICBjb25zdCBjYXJkSW1hZ2UgPSBjcmVhdGVDYXJkKGNhcmREYXRhKTtcclxuICAgIHNlY3Rpb25JbnN0YW5jZS5wcmVwZW5kSXRlbShjYXJkSW1hZ2UpO1xyXG59XHJcblxyXG4vLyBzZXR0aW5nIGV2ZW50IGxpc3RlbmVyc1xyXG5tb2RhbFdpdGhGb3JtVXNlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG5tb2RhbFdpdGhGb3JtSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxubW9kYWxXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuY29uZmlybU1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbmNoYW5nZVByb2ZpbGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChjYXJkRGF0YSkge1xyXG4gICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKHtcclxuICAgICAgICBjYXJkRGF0YSxcclxuICAgICAgICBteUlkOiB1c2VySWQsXHJcbiAgICAgICAgaGFuZGxlSW1hZ2VDbGljazogKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgbW9kYWxXaXRoSW1hZ2Uub3BlbihkYXRhKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGhhbmRsZURlbGV0ZUNsaWNrOiAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbmZpcm1Nb2RhbC5vcGVuKCk7XHJcbiAgICAgICAgICAgIGNvbmZpcm1Nb2RhbC5zZXRTdWJtaXRBY3Rpb24oKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uZmlybU1vZGFsLnJlbmRlckxvYWRpbmcodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IGNhcmQuZ2V0SWQoKTtcclxuICAgICAgICAgICAgICAgIGFwaS5yZW1vdmVDYXJkKGlkKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZC5oYW5kbGVEZWxldGVJY29uKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpcm1Nb2RhbC5jbG9zZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maXJtTW9kYWwucmVuZGVyTG9hZGluZyhmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSxcclxuICAgICAgICBoYW5kbGVMaWtlQ2xpY2s6ICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgaWQgPSBjYXJkLmdldElkKCk7XHJcbiAgICAgICAgICAgIGlmIChjYXJkLmlzTGlrZWQoKSkge1xyXG4gICAgICAgICAgICAgICAgYXBpLnVuTGlrZUNhcmQoaWQpLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjYXJkLnNldExpa2VzKGRhdGEubGlrZXMpO1xyXG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBhcGkubGlrZUNhcmQoaWQpLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjYXJkLnNldExpa2VzKGRhdGEubGlrZXMpO1xyXG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LCAnI2NhcmQtdGVtcGxhdGUnKTtcclxuICAgIHJldHVybiBjYXJkLmdldFZpZXcoKTtcclxufVxyXG5cclxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICBtb2RhbFdpdGhGb3JtVXNlci5vcGVuKCk7XHJcbiAgICBjb25zdCB1c2VyRGF0YSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgICBtb2RhbE5hbWVJbnB1dC52YWx1ZSA9IHVzZXJEYXRhLnVzZXJOYW1lO1xyXG4gICAgbW9kYWxEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gdXNlckRhdGEudXNlckRlc2NyaXB0aW9uO1xyXG4gICAgZm9ybVZhbGlkYXRvcnNbJ2VkaXRQcm9maWxlTW9kYWxGb3JtJ10ucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn0pO1xyXG5jYXJkQWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgZm9ybVZhbGlkYXRvcnNbJ2NhcmRNb2RhbEZvcm0nXS5yZXNldFZhbGlkYXRpb24oKTtcclxuICAgIG1vZGFsV2l0aEZvcm1JbWFnZS5vcGVuKCk7XHJcbn0pO1xyXG5lZGl0QnV0dG9uQXZhdGFydC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGZvcm1WYWxpZGF0b3JzWydjaGFuZ2VBdmF0YXJNb2RhbEZvcm0nXS5yZXNldFZhbGlkYXRpb24oKTtcclxuICAgIGNoYW5nZVByb2ZpbGVQb3B1cC5vcGVuKCk7XHJcbn0pOyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xyXG4gICAgICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsLFxyXG4gICAgICAgICAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVyc1xyXG4gICAgfVxyXG4gICAgZ2V0QXBwSW5mbygpIHtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuZ2V0VXNlckluZm8oKSwgdGhpcy5nZXRJbml0aWFsQ2FyZHMoKV0pXHJcbiAgICB9XHJcbiAgICBfY2hlY2tSZXNwb25zZShyZXMpIHtcclxuICAgICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yICR7cmVzLnN0YXR1c31gKVxyXG4gICAgfVxyXG4gICAgX3JlcXVlc3QodXJsLCBvcHRpb25zKSB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKHVybCwgb3B0aW9ucykudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKVxyXG4gICAgfVxyXG4gICAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwgeyBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZENhcmQoeyB0aXRsZSwgdXJsIH0pIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgbmFtZTogdGl0bGUsXHJcbiAgICAgICAgICAgICAgICBsaW5rOiB1cmxcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlQ2FyZChjYXJkSWQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJbmZvKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVcmx9Ly91c2Vycy9tZWAsIHsgaGVhZGVyczogdGhpcy5faGVhZGVycyB9KTtcclxuICAgIH1cclxuXHJcbiAgICB1c2VyRWRpdFByb2ZpbGUoeyB0aXRsZSwgZGVzY3JpcHRpb24gfSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVcmx9Ly91c2Vycy9tZWAsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IHRpdGxlLFxyXG4gICAgICAgICAgICAgICAgYWJvdXQ6IGRlc2NyaXB0aW9uXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgbGlrZUNhcmQoY2FyZElkKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIHVuTGlrZUNhcmQoY2FyZElkKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwgeyBtZXRob2Q6IFwiREVMRVRFXCIsIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlVXNlclByb2ZpbGUoYXZhdGFyKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYXZhdGFyKVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH1cclxufSIsImNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gICAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XHJcbiAgICAgICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gc2V0dGluZ3MuZm9ybVNlbGVjdG9yO1xyXG4gICAgICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBzZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xyXG5cclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcblxyXG4gICAgICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICAgICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgIH1cclxuICAgIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuXHJcbiAgICAgICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICAgICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgIH1cclxuXHJcbiAgICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgICAgICAgdGhpcy5fZGlzYWJsZUJ1dHRvbigpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcmVzZXRWYWxpZGF0aW9uKCkge1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgX2Rpc2FibGVCdXR0b24oKSB7XHJcbiAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIF9jaGVja0lucHV0VmFsaWR0eShpbnB1dEVsZW1lbnQpIHtcclxuICAgICAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICAgICAgcmV0dXJuICF0aGlzLl9pbnB1dExpc3QuZXZlcnkoKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QgPSBbLi4udGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07XHJcbiAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkdHkoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUodGhpcy5faW5wdXRMaXN0KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IHVzZXJOYW1lU2VsZWN0b3IsIHVzZXJEZXNjcmlwdGlvblNlbGVjdG9yLCBhdmF0YXJTZWxlY3RvciB9KSB7XHJcbiAgICAgICAgdGhpcy5fdXNlck5hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyTmFtZVNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl91c2VyRGVzY3JpcHRpb25FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyRGVzY3JpcHRpb25TZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fcHJvZmlsZUF2YXRhckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhclNlbGVjdG9yKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRVc2VySW5mbygpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB1c2VyTmFtZTogdGhpcy5fdXNlck5hbWVFbGVtZW50LnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICB1c2VyRGVzY3JpcHRpb246IHRoaXMuX3VzZXJEZXNjcmlwdGlvbkVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldFVzZXJJbmZvKHsgdGl0bGUsIGRlc2NyaXB0aW9uIH0pIHtcclxuICAgICAgICB0aGlzLl91c2VyTmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSB0aXRsZTtcclxuICAgICAgICB0aGlzLl91c2VyRGVzY3JpcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gZGVzY3JpcHRpb247XHJcbiAgICAgICAgdGhpcy5zZXRBdmF0YXJ0SW5mbyh0aGlzLl9hdmF0YXIpO1xyXG5cclxuICAgIH1cclxuICAgIHNldEF2YXRhcnRJbmZvKGF2YXRhcikge1xyXG4gICAgICAgIHRoaXMuX3Byb2ZpbGVBdmF0YXJFbGVtZW50LnNyYyA9IGF2YXRhcjtcclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cFwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciB9KSB7XHJcbiAgICAgICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgfVxyXG4gICAgb3Blbih7IGxpbmssIG5hbWUgfSkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2NhcHRpb24nKS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgY29uc3QgaW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsX19pbWFnZScpO1xyXG4gICAgICAgIGltYWdlLnNyYyA9IGxpbms7XHJcbiAgICAgICAgaW1hZ2UuYWx0ID0gbmFtZTtcclxuICAgICAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiX3JlZiIsImNhcmRTZWxlY3RvciIsImNhcmREYXRhIiwibXlJZCIsImhhbmRsZUltYWdlQ2xpY2siLCJoYW5kbGVEZWxldGVDbGljayIsImhhbmRsZUxpa2VDbGljayIsInRoaXMiLCJfY2FyZERhdGEiLCJfbXlJZCIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlSW1hZ2VDbGljayIsIl9oYW5kbGVEZWxldGVDbGljayIsIl9oYW5kbGVMaWtlQ2xpY2siLCJfbGlrZXMiLCJsaWtlcyIsIl9vd25lciIsIm93bmVyIiwiX2lkIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX2xpa2VCdXR0b24iLCJfZWxtZW50IiwicXVlcnlTZWxlY3RvciIsIl9kZWxldGVCdXR0b24iLCJfbGlrZXNBbW91bnQiLCJhZGRFdmVudExpc3RlbmVyIiwiX2NhcmRJbWFnZSIsImdldElkIiwiaXNMaWtlZCIsInNvbWUiLCJsaWtlIiwic2V0TGlrZXMiLCJfaGFuZGxlTGlrZUljb24iLCJ1cGRhdGVMaWtlcyIsInRleHRDb250ZW50IiwibGVuZ3RoIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwiX2NoZWNrQ2FyZE93bmVyIiwiaGFuZGxlRGVsZXRlSWNvbiIsIl9nZXRUZW1wbGF0ZSIsImRvY3VtZW50IiwiY29udGVudCIsImNsb25lTm9kZSIsImdldFZpZXciLCJfY2FyZFRpdGxlIiwic3JjIiwiYWx0IiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJldnQiLCJrZXkiLCJjbG9zZSIsInNldEV2ZW50TGlzdGVuZXJzIiwiZXZlbnQiLCJ0YXJnZXQiLCJvcGVuIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0IiwibG9hZGluZ1RleHQiLCJzdXBlciIsIl9wb3B1cEZvcm0iLCJfaW5wdXRMaXN0IiwicXVlcnlTZWxlY3RvckFsbCIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX3N1Ym1pdEJ1dHRvbiIsIl9zdWJtaXRCdXR0b25UZXh0IiwiX2xvYWRpbmdUZXh0Iiwic2V0SW5wdXRWYWx1ZXMiLCJkYXRhIiwiZm9yRWFjaCIsImlucHV0IiwidmFsdWUiLCJyZXNldCIsIl9nZXRJbnB1dFZhbHVlcyIsIl9uZXdEYXRhIiwiaW5wdXRFbGVtZW50Iiwic2V0U3VibWl0QWN0aW9uIiwiYWN0aW9uIiwicmVuZGVyTG9hZGluZyIsImlzTG9hZGluZyIsInByZXZlbnREZWZhdWx0IiwiU2VjdGlvbiIsInJlbmRlcmVyIiwiX3JlbmRlcmVkSXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiYWRkSXRlbSIsImVsZW1lbnQiLCJhcHBlbmQiLCJwcmVwZW5kSXRlbSIsInByZXBlbmQiLCJyZW5kZXJJdGVtcyIsIml0ZW0iLCJwcm9maWxlRWRpdEJ1dHRvbiIsImNhcmRBZGRCdXR0b24iLCJwcm9maWxlTW9kYWxTZWxlY3RvciIsImNhcmRNb2RhbFNlbGVjdG9yIiwiaW1hZ2VNb2RhbFNlbGVjdG9yIiwidXNlck5hbWVTZWxlY3RvciIsInVzZXJEZXNjcmlwdGlvblNlbGVjdG9yIiwiY2FyZExpc3RTZWxlY3RvciIsIm1vZGFsQ2hhbmdlUHJvZmlsZVNlbGVjdG9yIiwicHJvZmlsZU1vZGFsIiwiY2FyZE1vZGFsIiwiaW1hZ2VNb2RhbCIsImNoYW5nZVByb2ZpbGVNb2RhbCIsIm1vZGFsTmFtZUlucHV0IiwibW9kYWxEZXNjcmlwdGlvbklucHV0IiwiZWRpdEJ1dHRvbkF2YXRhcnQiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImFwaSIsImJhc2VVcmwiLCJoZWFkZXJzIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsImdldEFwcEluZm8iLCJQcm9taXNlIiwiYWxsIiwiZ2V0VXNlckluZm8iLCJnZXRJbml0aWFsQ2FyZHMiLCJfY2hlY2tSZXNwb25zZSIsInJlcyIsIm9rIiwianNvbiIsInJlamVjdCIsInN0YXR1cyIsIl9yZXF1ZXN0IiwidXJsIiwib3B0aW9ucyIsImZldGNoIiwidGhlbiIsImFkZENhcmQiLCJfcmVmMiIsInRpdGxlIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZW1vdmVDYXJkIiwiY2FyZElkIiwidXNlckVkaXRQcm9maWxlIiwiX3JlZjMiLCJkZXNjcmlwdGlvbiIsImFib3V0IiwibGlrZUNhcmQiLCJ1bkxpa2VDYXJkIiwidXBkYXRlVXNlclByb2ZpbGUiLCJhdmF0YXIiLCJhdXRob3JpemF0aW9uIiwiZm9ybVZhbGlkYXRvcnMiLCJ2YWxpZGF0aW9uU2V0dGluZ3MiLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIkFycmF5IiwiZnJvbSIsImZvcm1FbGVtZW50IiwidmFsaWRhdG9yIiwic2V0dGluZ3MiLCJfZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsIl9mb3JtRWxlbWVudCIsIl9zaG93SW5wdXRFcnJvciIsImVycm9yTWVzc2FnZUVsIiwiaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oaWRlSW5wdXRFcnJvciIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiX2hhc0ludmFsaWRJbnB1dCIsIl9kaXNhYmxlQnV0dG9uIiwiX2J1dHRvbkVsZW1lbnQiLCJkaXNhYmxlZCIsInJlc2V0VmFsaWRhdGlvbiIsIl9jaGVja0lucHV0VmFsaWR0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJldmVyeSIsImUiLCJlbmFibGVWYWxpZGF0aW9uIiwiZm9ybU5hbWUiLCJnZXRBdHRyaWJ1dGUiLCJ1c2VySW5mbyIsImF2YXRhclNlbGVjdG9yIiwiX3VzZXJOYW1lRWxlbWVudCIsIl91c2VyRGVzY3JpcHRpb25FbGVtZW50IiwiX3Byb2ZpbGVBdmF0YXJFbGVtZW50IiwidXNlck5hbWUiLCJ1c2VyRGVzY3JpcHRpb24iLCJzZXRVc2VySW5mbyIsInNldEF2YXRhcnRJbmZvIiwiX2F2YXRhciIsInNlY3Rpb25JbnN0YW5jZSIsInVzZXJJZCIsInVzZXJEYXRhIiwicmVuZGVyQ2FyZCIsImNhdGNoIiwiY29uc29sZSIsImVycm9yIiwibW9kYWxXaXRoSW1hZ2UiLCJpbWFnZSIsImNoYW5nZVByb2ZpbGVQb3B1cCIsImZpbmFsbHkiLCJtb2RhbFdpdGhGb3JtVXNlciIsImNvbmZpcm1Nb2RhbCIsIm1vZGFsV2l0aEZvcm1JbWFnZSIsImNhcmRJbWFnZSIsImNhcmQiLCJjcmVhdGVDYXJkIl0sInNvdXJjZVJvb3QiOiIifQ==