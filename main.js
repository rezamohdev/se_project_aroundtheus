!function(){"use strict";class e{constructor(e,t){let{cardData:s,handleImageClick:n}=e;this._cardData=s,this._name=s.name,this._link=s.link,this._cardSelector=t,this._handleImageClick=n}_setEventListeners(){this._likeButton=this._elment.querySelector(".card__like-button"),this._deleteButton=this._elment.querySelector(".card__delete-button"),this._likeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteIcon())),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._cardData)}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteIcon(){this._elment.remove(),this._elment=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._elment=this._getTemplate(),this._cardImage=this._elment.querySelector(".card__image"),this._cardTitle=this._elment.querySelector(".card__title"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._setEventListeners(),this._elment}}class t{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}}class s extends t{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._handleFormSubmit=s}close(){this._popupForm.reset(),super.close()}_getInputValues(){return this._newData={},this._inputList.forEach((e=>{this._newData[e.name]=e.value})),this._newData}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}}const n=document.querySelector("#profile-edit-button"),r=document.querySelector("#profile-add-button"),o="#profile-modal",i="#card-modal",l="#image-modal",a="#profile-title",c="#profile-description",u=".gallery__cards",d=document.querySelector(o),m=document.querySelector(i),_=document.querySelector(l),p=(document.querySelector(".modal__image"),document.querySelector(".modal__caption"),document.querySelector("#modal-close"),m.querySelector("#card-modal-close"),_.querySelector("#image-modal-close"),document.querySelector(a),document.querySelector(c),m.querySelector("#modal-title-input"),m.querySelector("#modal-url-input"),document.querySelector("#modal-name")),h=document.querySelector("#modal-description"),S=(document.querySelector("#modal-submit-button"),document.querySelector("#card-modal-submit-button"),document.querySelector(u),document.querySelector("#card-template").content.firstElementChild,d.querySelector(".modal__form")),E=m.querySelector(".modal__form"),y={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__button_type_error",errorClass:"modal__error_visible"};var v=class{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){this._hasInvalidInput()?this._disableButton():(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this.toggleButtonState()}_disableButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}_checkInputValidty(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}_setEventListeners(){this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidty(e),this.toggleButtonState(this._inputList)}))}))}enableValidation(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}};const g=new v(y,S),L=new v(y,E),q=new class{constructor(e){let{userNameSelector:t,userDescriptionSelector:s}=e;this._userNameElement=document.querySelector(t),this._userDescriptionElement=document.querySelector(s)}getUserInfo(){return{userName:this._userNameElement.textContent,userDescription:this._userDescriptionElement.textContent}}setUserInfo(e){let{title:t,description:s}=e;this._userNameElement.textContent=t,this._userDescriptionElement.textContent=s}}({userNameSelector:a,userDescriptionSelector:c}),b=new class extends t{constructor(e){let{popupSelector:t}=e;super({popupSelector:t})}open(e){let{link:t,name:s}=e;this._popupElement.querySelector(".modal__caption").textContent=s;const n=this._popupElement.querySelector(".modal__image");n.src=t,n.alt=s,super.open()}}({popupSelector:l}),f=new s({popupSelector:o,handleFormSubmit:e=>{q.setUserInfo(e)}}),k=new s({popupSelector:i,handleFormSubmit:e=>{const t=e.title;I({link:e.url,name:t})}}),w=new class{constructor(e,t){let{data:s,renderer:n}=e;this._renderedItems=s,this._renderer=n,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}renderItems(){this._renderedItems.forEach((e=>{this._renderer(e)}))}}({data:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:I},u);function I(t){const s=function(t){return new e({cardData:t,handleImageClick:e=>{b.open(e)}},"#card-template").getView()}(t);w.addItem(s)}w.renderItems(),g.enableValidation(),L.enableValidation(),f.setEventListeners(),k.setEventListeners(),b.setEventListeners(),n.addEventListener("click",(()=>{f.open();const e=q.getUserInfo();p.value=e.userName,h.value=e.userDescription,g.resetValidation()})),r.addEventListener("click",(()=>{L.resetValidation(),k.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,